#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.11 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 79 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 1696 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 173
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e textEditor) (read-case-sensitive #t) (teachpacks ((lib \"image.rkt"
 #"\" \"teachpack\" \"2htdp\") (lib \"abstraction.r"
) 0 0 4 3 344
(
 #"kt\" \"teachpack\" \"2htdp\") (lib \"batch-io.rkt\" \"teachpack\" \""
 #"2htdp\") (lib \"universe.rkt\" \"teachpack\" \"2htdp\"))) (htdp-sett"
 #"ings #(#t constructor repeating-decimal #f #t none #f ((lib \"image."
 #"rkt\" \"teachpack\" \"2htdp\") (lib"
 #" \"abstraction.rkt\" \"teachpack\" \"2htdp\") (lib \"batch-io.rkt\" "
 #"\"teachpack\" \"2htdp\") (lib \"universe.rkt\" \"teachpack\" \"2htdp"
 #"\")) #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 74
(
 #"; Design a program that creates a one-line text editor. This editor "
 #"should"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
#"; allow a user to position a cursor, insert text, and delete text."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
(
 #"; 1) Define constants for the Wo"
 #"rld (e.g. \"physical\", \"graphical\")"
) 0 0 24 29 1 #"\n"
0 0 17 3 64
#"; 2) Develop a data representation for all possible World states"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; (this can be a data definition of the World)"
0 0 24 29 1 #"\n"
0 0 17 3 59
#"; 3) Create functions that can render states as images, and"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; end the world"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";   a) get current state (State -> Image),"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";   b) set next state based on current state (State -> State)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";   c) end when... (State -> Boolean)"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";   d) keyboard callback (State, keyEvent -> State)"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";   e) mouse callback (State, mouseX, mouseY, mouseEvent -> State)"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";   f) define any helper functions that the above rely on"
0 0 24 29 1 #"\n"
0 0 17 3 62
#"; 4) Create a main function that takes in input args necessary"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; to start running the world"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; 1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD_WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD_HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"SCN"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD_WIDTH"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD_HEIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"TEXT_SZ"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT_COLOR"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CURSOR_ON"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD_HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"CURSOR_OFF"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD_HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; An editor is a structure with fields `txt` (a string representing"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; the text within the editor), `cursor`(a rectangle representing a"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; cursor), `cursor-pos` (a number indicating the cursor's position"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; within the text), and `cursor-flag`, a boolean indicating whether"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; the cursor is visible"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"editor"
0 0 24 3 2 #" ["
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 6 #"cursor"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 1 #" "
0 0 14 3 10 #"cursorFlag"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; 2) A state is an editor"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; define some editor states which we'll use for testing"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"hello world\""
0 0 24 3 1 #" "
0 0 14 3 9 #"CURSOR_ON"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"hello world\""
0 0 24 3 1 #" "
0 0 14 3 9 #"CURSOR_ON"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"hello world\""
0 0 24 3 1 #" "
0 0 14 3 10 #"CURSOR_OFF"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"hello world\""
0 0 24 3 1 #" "
0 0 14 3 10 #"CURSOR_OFF"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; 3)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; a)"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; `render` renders an image from an editor `ed`"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; Editor -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 2 #") "
0 6           4 21 2839
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3."
 #"5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(struct:t"
 #"ext \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1"
 #" \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 17.0"
 #" 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12"
 #" #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct"
 #":translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 27.0 0.0 #(struct:translate 1."
 #"5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #(struc"
 #"t:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" "
 #"0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 4"
 #"6.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\""
 #" 12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0 #(str"
 #"uct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:translate"
 #" 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 60.0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 61.0 3.0 #(struct"
 #":translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:poi"
 #"nt 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-po"
 #"int 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(s"
 #"truct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 "
 #"0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\"))))"
 #")))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 2 #") "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(stru"
 #"ct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"17.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30."
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point"
 #" 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\")))))"
 #" #(struct:translate 31.0 3.0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal nor"
 #"mal #f))) #(struct:translate 9.0 0.0 #(struct:translate 3.5 7.0 #(st"
 #"ruct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 16.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 20.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))))) #(struct:translate 23.0 0.0 #("
 #"struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swi"
 #"ss normal normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(st"
 #"ruct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:p"
 #"ulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) out"
 #"line #(struct:pen \"black\" 2 solid round round)))) #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-"
 #"point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"whi"
 #"te\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 2 #") "
0 6           4 21 2681
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 3.5 7.0 #("
 #"struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f))) #(st"
 #"ruct:translate 7.0 0.0 #(struct:t"
 #"ranslate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(struct:"
 #"text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 20.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct"
 #":pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255"
 #" \"white\"))))) #(struct:translate 21.0 3.0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(st"
 #"ruct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss"
 #" normal normal #f))))) #(struct:translate 10.0 0.0 #(struct:translat"
 #"e 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 19.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 26.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \""
 #"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 30.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))))) #(struct:translate 33.0 0.0 #"
 #"(struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f sw"
 #"iss normal normal #f))))))) #(struct:translate 0 0.0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(s"
 #"truct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:"
 #"pulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) ou"
 #"tline #(struct:pen \"black\" 2 solid round round)))) #(struct:transl"
 #"ate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled"
 #"-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"wh"
 #"ite\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 2 #") "
0 6           4 21 2838
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 0.0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal no"
 #"rmal #f))) #(struct:translate 0.0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point"
 #" 0 0 0 20 0 0)) 255 \"white\"))))) #(struct:translate 1.0 3.0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal no"
 #"rmal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \""
 #"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 17.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #"
 #"(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f sw"
 #"iss normal normal #f))))) #(struct:translate 27.0 0.0 #(struct:trans"
 #"late 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 "
 #"#(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) "
 #"#(struct:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text"
 #" \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 46.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \""
 #"black\" 12 #f swiss normal normal #f))))) #(struct:translate 50.0 0."
 #"0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f"
 #" swiss normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:tr"
 #"anslate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal"
 #" normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:poin"
 #"t 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0"
 #" 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))"
 #"))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 58
#"; create local vars for `preText` (text before cursor) and"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 32 #"; `postText` (text after cursor)"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 7 #"preText"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-txt"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 16 #"editor-cursorPos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 7 #"TEXT_SZ"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT_COLOR"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 8 #"postText"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"substring"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-txt"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 3 #") ("
0 0 14 3 16 #"editor-cursorPos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 3 #") ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-txt"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 7 #"TEXT_SZ"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT_COLOR"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 37 #"; overlay text onto editor background"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 73
(
 #"; place text pre cursor, cursor, text post cursor beside each other "
 #"     "
) 0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 7 #"preText"
0 0 24 3 2 #" ("
0 0 14 3 13 #"editor-cursor"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #") "
0 0 14 3 8 #"postText"
0 0 24 3 2 #") "
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 3 #"SCN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; b)"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; `flash-cursor` flashes the cursor each clock tick"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Editor -> Editor"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 12 #"flash-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 3 #")) "
0 6           4 21 2838
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3."
 #"5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(struct:t"
 #"ext \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1"
 #" \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 17.0"
 #" 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12"
 #" #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct"
 #":translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 27.0 0.0 #(struct:translate 1."
 #"5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #(struc"
 #"t:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" "
 #"0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 4"
 #"6.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\""
 #" 12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0 #(str"
 #"uct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:translate"
 #" 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 60.0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"white\"))))) #(struct:translate 61.0 3.0 #(stru"
 #"ct:translate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:poin"
 #"t 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0"
 #" 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))"
 #"))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 12 #"flash-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 3 #")) "
0 6           4 21 2681
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(stru"
 #"ct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"17.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30."
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point"
 #" 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))"
 #")) #(struct:translate 31.0 3.0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal n"
 #"ormal #f))) #(struct:translate 9.0 0.0 #(struct:translate 3.5 7.0 #("
 #"struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #("
 #"struct:translate 16.0 0.0 #(struct"
 #":translate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 20.0 0.0 #(struct:translate 1."
 #"5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))))) #(struct:translate 23.0 0.0 #(struct:translate 3.5 7.0 #(struc"
 #"t:text \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(str"
 #"uct:translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 200 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(st"
 #"ruct:pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 so"
 #"lid round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:p"
 #"ulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 2"
 #"0.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 12 #"flash-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 3 #")) "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 3.5 7.0 #("
 #"struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f))) #(st"
 #"ruct:translate 7.0 0.0 #(struct:t"
 #"ranslate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(struct:"
 #"text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 20.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct"
 #":pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255"
 #" \"red\"))))) #(struct:translate 21.0 3.0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black"
 #"\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(stru"
 #"ct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 10.0 0.0 #(struct:translate "
 #"4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))) #(struct:translate 19.0 0.0 #(struct:translate 3.5 7.0 #(str"
 #"uct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(str"
 #"uct:translate 26.0 0.0 #(struct:t"
 #"ranslate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 30.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 33.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(struc"
 #"t:translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point "
 #"200 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(stru"
 #"ct:pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 soli"
 #"d round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pul"
 #"led-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20."
 #"0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 12 #"flash-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 3 #")) "
0 6           4 21 2836
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 0.0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal no"
 #"rmal #f))) #(struct:translate 0.0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point"
 #" 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 1.0 3.0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(str"
 #"uct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(str"
 #"uct:translate 14.0 0.0 #(struct:t"
 #"ranslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30."
 #"0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 39.0 0.0 #(struc"
 #"t:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 46.0 0.0 #(struct:translate 2"
 #".0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 50.0 0.0 #(struct:translate 1.5 7.0 #(stru"
 #"ct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 53.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(struct:translat"
 #"e 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(s"
 #"truct:point 200 20) #(struct:point 0 20)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulled-"
 #"point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 solid round ro"
 #"und)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200"
 #" 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 20.0) #f"
 #")"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"flash-cursor"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 2 #"on"
0 0 24 3 2 #" ("
0 0 14 3 17 #"editor-cursorFlag"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 3 #"txt"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-txt"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 9 #"cursorPos"
0 0 24 3 2 #" ("
0 0 14 3 16 #"editor-cursorPos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"on"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 9 #"CURSOR_ON"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 10 #"CURSOR_OFF"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; d)"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; `edit` creates a new editor from an editor `ed` and a key event `k"
 #"e`"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #"; Editor KeyEvent -> Editor"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #")) "
0 6           4 21 2836
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3."
 #"5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(struct:t"
 #"ext \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1"
 #" \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 17.0"
 #" 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12"
 #" #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct"
 #":translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 27.0 0.0 #(struct:translate 1."
 #"5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #(struc"
 #"t:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" "
 #"0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 4"
 #"6.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\""
 #" 12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0 #(str"
 #"uct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:translate"
 #" 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 60.0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 61.0 3.0 #(struct"
 #":translate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal"
 #" normal #f))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point "
 #"0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point"
 #" 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(stru"
 #"ct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 2"
 #"00 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))"
 #") #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")) "
0 6           4 21 2680
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:"
 #"translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5"
 #" 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(struct"
 #":text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0"
 #" 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 27"
 #".0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))))) #(struct:translate 30.0 0.0 #(stru"
 #"ct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 39.0 0.0 #(struct:translate "
 #"3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))) #(struct:translate 46.0 0.0 #(struct:translate 2.0 7.0 #(str"
 #"uct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(str"
 #"uct:translate 50.0 0.0 #(struct:t"
 #"ranslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 53.0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 54.0 3.0 "
 #"#(struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f s"
 #"wiss normal normal #f))))) #(struct:translate 0 0.0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(st"
 #"ruct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:p"
 #"ulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) out"
 #"line #(struct:pen \"black\" 2 solid round round)))) #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-"
 #"point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"whi"
 #"te\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\b\""
0 0 24 3 3 #")) "
0 6           4 21 2677
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:"
 #"translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5"
 #" 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(struct"
 #":text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0"
 #" 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 27"
 #".0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))))) #(struct:translate 30.0 0.0 #(stru"
 #"ct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 39.0 0.0 #(struct:translate "
 #"3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))) #(struct:translate 46.0 0.0 #(struct:translate 2.0 7.0 #(str"
 #"uct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(str"
 #"uct:translate 50.0 0.0 #(struct:t"
 #"ranslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 53.0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 54.0 3.0 "
 #"#(struct:translate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swis"
 #"s normal normal #f))))) #(struct:translate 0 0.0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struc"
 #"t:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pull"
 #"ed-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outlin"
 #"e #(struct:pen \"black\" 2 solid round round)))) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 "
 #"20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 3 #")) "
0 6           4 21 2836
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3."
 #"5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(struct:t"
 #"ext \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1"
 #" \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 17.0"
 #" 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12"
 #" #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct"
 #":translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 27.0 0.0 #(struct:translate 1."
 #"5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #(struc"
 #"t:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" "
 #"0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 4"
 #"6.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\""
 #" 12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0 #(str"
 #"uct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:translate"
 #" 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 60.0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 61.0 3.0 #(struct"
 #":translate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal"
 #" normal #f))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point "
 #"0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point"
 #" 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(stru"
 #"ct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 2"
 #"00 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))"
 #") #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\t\""
0 0 24 3 3 #")) "
0 6           4 21 2836
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3."
 #"5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(struct:t"
 #"ext \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1"
 #" \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 17.0"
 #" 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12"
 #" #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct"
 #":translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 27.0 0.0 #(struct:translate 1."
 #"5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #(struc"
 #"t:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" "
 #"0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 4"
 #"6.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\""
 #" 12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0 #(str"
 #"uct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:translate"
 #" 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 60.0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 61.0 3.0 #(struct"
 #":translate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal"
 #" normal #f))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point "
 #"0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point"
 #" 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(stru"
 #"ct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 2"
 #"00 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))"
 #") #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 3 #")) "
0 6           4 21 2995
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0"
 #".0 #(struct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #"
 #"f swiss normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:t"
 #"ranslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30."
 #"0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 39.0 0.0 #(struc"
 #"t:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 46.0 0.0 #(struct:translate 2"
 #".0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 50.0 0.0 #(struct:translate 1.5 7.0 #(stru"
 #"ct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 53.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"60.0 0.0 #(struct:translate 3.5 "
 #"7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 67.0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 "
 #"0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0"
 #" 20 0 0)) 255 \"red\"))))) #(struct:translate 68.0 3.0 #(struct:tran"
 #"slate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point 0 20)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 "
 #"200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:pe"
 #"n \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20"
 #" 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(s"
 #"truct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")) "
0 6           4 21 2995
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0"
 #".0 #(struct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #"
 #"f swiss normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:t"
 #"ranslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30."
 #"0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 39.0 0.0 #(struc"
 #"t:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 46.0 0.0 #(struct:translate 2"
 #".0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 50.0 0.0 #(struct:translate 1.5 7.0 #(stru"
 #"ct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 53.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"60.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 63.0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 "
 #"0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0"
 #" 20 0 0)) 255 \"red\"))))) #(struct:translate 64.0 3.0 #(struct:tran"
 #"slate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point 0 20)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 "
 #"200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:pe"
 #"n \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20"
 #" 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(s"
 #"truct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #")) "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:t"
 #"ranslate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0"
 #" #(struct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f)))))"
 #" #(struct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:tex"
 #"t \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 17.0 0.0 #(struct:translat"
 #"e 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \""
 #" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 30.0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))))) #(struct:translate 39.0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 "
 #"20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))))) #(stru"
 #"ct:translate 40.0 3.0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:t"
 #"ranslate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 11.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 14.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(struc"
 #"t:translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point "
 #"200 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(stru"
 #"ct:pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 soli"
 #"d round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pul"
 #"led-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20."
 #"0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")) "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate"
 #" 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(st"
 #"ruct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 27.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-"
 #"point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\""
 #"))))) #(struct:translate 28.0 3.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 1.5 7.0 #(struct:te"
 #"xt \" \" 0 1 \"black\" 12 #f swiss normal normal #f))) #(struct:tran"
 #"slate 3.0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"b"
 #"lack\" 12 #f swiss normal normal #f))))) #(struct:translate 12.0 0.0"
 #" #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 19.0 0.0 #(struct:tra"
 #"nslate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))))) #(struct:translate 23.0 0.0 #(struct:translate 1.5 7."
 #"0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))"
 #") #(struct:translate 26.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(struct:"
 #"translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point 20"
 #"0 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct"
 #":pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 solid "
 #"round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 "
 #"20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\b\""
0 0 24 3 3 #")) "
0 6           4 21 2520
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate"
 #" 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(st"
 #"ruct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 27.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-"
 #"point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\""
 #"))))) #(struct:translate 28.0 3.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))) #(struct:translate 9.0 0.0 #(struct:translate 3.5 7.0"
 #" #(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f)))))"
 #" #(struct:translate 16.0 0.0 #(struct:translate 2.0 7.0 #(struct:tex"
 #"t \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 20.0 0.0 #(struct:translat"
 #"e 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 23.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #"
 #"(struct:translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 200 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) "
 #"#(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" "
 #"2 solid round round)))) #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(stru"
 #"ct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200"
 #".0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 3 #")) "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(stru"
 #"ct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"17.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30."
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point"
 #" 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\")))))"
 #" #(struct:translate 31.0 3.0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal nor"
 #"mal #f))) #(struct:translate 9.0 0.0 #(struct:translate 3.5 7.0 #(st"
 #"ruct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 16.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 20.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))))) #(struct:translate 23.0 0.0 #("
 #"struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swi"
 #"ss normal normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(st"
 #"ruct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:p"
 #"ulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) out"
 #"line #(struct:pen \"black\" 2 solid round round)))) #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-"
 #"point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"whi"
 #"te\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\t\""
0 0 24 3 3 #")) "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(stru"
 #"ct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"17.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30."
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point"
 #" 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\")))))"
 #" #(struct:translate 31.0 3.0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal nor"
 #"mal #f))) #(struct:translate 9.0 0.0 #(struct:translate 3.5 7.0 #(st"
 #"ruct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 16.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 20.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))))) #(struct:translate 23.0 0.0 #("
 #"struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swi"
 #"ss normal normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(st"
 #"ruct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:p"
 #"ulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) out"
 #"line #(struct:pen \"black\" 2 solid round round)))) #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-"
 #"point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"whi"
 #"te\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 3 #")) "
0 6           4 21 2838
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:t"
 #"ranslate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0"
 #" #(struct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f)))))"
 #" #(struct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:tex"
 #"t \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 17.0 0.0 #(struct:translat"
 #"e 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \""
 #" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 30.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))))) #(struct:translate 37.0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 "
 #"20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))))) #(stru"
 #"ct:translate 38.0 3.0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 4.5"
 #" 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")) #(struct:translate 9.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 16.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 "
 #"\"black\" 12 #f swiss normal normal #f))))) #(struct:translate 20.0 "
 #"0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 "
 #"#f swiss normal normal #f))))) #(struct:translate 23.0 0.0 #(struct:"
 #"translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:po"
 #"int 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-p"
 #"oint 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #("
 #"struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0"
 #" 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))"
 #"))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")) "
0 6           4 21 2838
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:t"
 #"ranslate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0"
 #" #(struct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f)))))"
 #" #(struct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:tex"
 #"t \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 17.0 0.0 #(struct:translat"
 #"e 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \""
 #" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 30.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))))) #(struct:translate 33.0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 "
 #"20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))))) #(stru"
 #"ct:translate 34.0 3.0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 4.5"
 #" 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")) #(struct:translate 9.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 16.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 "
 #"\"black\" 12 #f swiss normal normal #f))))) #(struct:translate 20.0 "
 #"0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 "
 #"#f swiss normal normal #f))))) #(struct:translate 23.0 0.0 #(struct:"
 #"translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:po"
 #"int 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-p"
 #"oint 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #("
 #"struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0"
 #" 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))"
 #"))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #")) "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate"
 #" 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(st"
 #"ruct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 27.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-"
 #"point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\""
 #"))))) #(struct:translate 28.0 3.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 1.5 7.0 #(struct:te"
 #"xt \" \" 0 1 \"black\" 12 #f swiss normal normal #f))) #(struct:tran"
 #"slate 3.0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"b"
 #"lack\" 12 #f swiss normal normal #f))))) #(struct:translate 12.0 0.0"
 #" #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 19.0 0.0 #(struct:tra"
 #"nslate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))))) #(struct:translate 23.0 0.0 #(struct:translate 1.5 7."
 #"0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))"
 #") #(struct:translate 26.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(struct:"
 #"translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point 20"
 #"0 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct"
 #":pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 solid "
 #"round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 "
 #"20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")) "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f sw"
 #"iss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:translat"
 #"e 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(s"
 #"truct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 17.0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #("
 #"struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0"
 #")) 255 \"red\"))))) #(struct:translate 18.0 3.0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))) #(struct:translate 3.0 0.0 #(struct:translate 3.5 7.0 #"
 #"(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #"
 #"(struct:translate 10.0 0.0 #(struct:translate 1.5 7.0 #(struct:text "
 #"\" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:trans"
 #"late 13.0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"b"
 #"lack\" 12 #f swiss normal normal #f))))) #(struct:translate 22.0 0.0"
 #" #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 29.0 0.0 #(struct:tra"
 #"nslate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))))) #(struct:translate 33.0 0.0 #(struct:translate 1.5 7."
 #"0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))"
 #") #(struct:translate 36.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(struct:"
 #"translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point 20"
 #"0 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct"
 #":pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 solid "
 #"round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 "
 #"20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\b\""
0 0 24 3 3 #")) "
0 6           4 21 2520
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f sw"
 #"iss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:translat"
 #"e 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(s"
 #"truct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 17.0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #("
 #"struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0"
 #")) 255 \"red\"))))) #(struct:translate 18.0 3.0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translat"
 #"e 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))) #(struct:translate 7.0 0.0 #(struct:translate 1.5 7.0 #(stru"
 #"ct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 10.0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"19.0 0.0 #(struct:translate 3.5 "
 #"7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 26.0 0.0 #(struct:translate 2.0 7.0 #(struct:"
 #"text \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 30.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 33."
 #"0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))))) #(struct:translate 0 0.0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 "
 #"20) #(struct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #("
 #"struct:pulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0"
 #" 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struct"
 #":translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct"
 #":pulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 2"
 #"55 \"white\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 3 #")) "
0 6           4 21 2681
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 3.5 7.0 #("
 #"struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f))) #(st"
 #"ruct:translate 7.0 0.0 #(struct:t"
 #"ranslate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(struct:"
 #"text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 20.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct"
 #":pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255"
 #" \"white\"))))) #(struct:translate 21.0 3.0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(st"
 #"ruct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss"
 #" normal normal #f))))) #(struct:translate 10.0 0.0 #(struct:translat"
 #"e 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 19.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 26.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \""
 #"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 30.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))))) #(struct:translate 33.0 0.0 #"
 #"(struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f sw"
 #"iss normal normal #f))))))) #(struct:translate 0 0.0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(s"
 #"truct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:"
 #"pulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) ou"
 #"tline #(struct:pen \"black\" 2 solid round round)))) #(struct:transl"
 #"ate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled"
 #"-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"wh"
 #"ite\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\t\""
0 0 24 3 3 #")) "
0 6           4 21 2681
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 3.5 7.0 #("
 #"struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f))) #(st"
 #"ruct:translate 7.0 0.0 #(struct:t"
 #"ranslate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(struct:"
 #"text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 20.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct"
 #":pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255"
 #" \"white\"))))) #(struct:translate 21.0 3.0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(st"
 #"ruct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss"
 #" normal normal #f))))) #(struct:translate 10.0 0.0 #(struct:translat"
 #"e 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 19.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 26.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \""
 #"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 30.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))))) #(struct:translate 33.0 0.0 #"
 #"(struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f sw"
 #"iss normal normal #f))))))) #(struct:translate 0 0.0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(s"
 #"truct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:"
 #"pulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) ou"
 #"tline #(struct:pen \"black\" 2 solid round round)))) #(struct:transl"
 #"ate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled"
 #"-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"wh"
 #"ite\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 3 #")) "
0 6           4 21 2838
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate"
 #" 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(st"
 #"ruct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 27.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-"
 #"point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\""
 #"))))) #(struct:translate 28.0 3.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f"
 #" swiss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:trans"
 #"late 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 10.0 0.0 #(struct:translate 4.5 7.0 "
 #"#(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) "
 #"#(struct:translate 19.0 0.0 #(struct:translate 3.5 7.0 #(struct:text"
 #" \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 26.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \""
 #"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30.0 0."
 #"0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f"
 #" swiss normal normal #f))))) #(struct:translate 33.0 0.0 #(struct:tr"
 #"anslate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal"
 #" normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:poin"
 #"t 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0"
 #" 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))"
 #"))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")) "
0 6           4 21 2838
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate"
 #" 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(st"
 #"ruct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 20.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" "
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 23.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-"
 #"point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\""
 #"))))) #(struct:translate 24.0 3.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f"
 #" swiss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:trans"
 #"late 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 10.0 0.0 #(struct:translate 4.5 7.0 "
 #"#(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) "
 #"#(struct:translate 19.0 0.0 #(struct:translate 3.5 7.0 #(struct:text"
 #" \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 26.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \""
 #"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30.0 0."
 #"0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f"
 #" swiss normal normal #f))))) #(struct:translate 33.0 0.0 #(struct:tr"
 #"anslate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal"
 #" normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:poin"
 #"t 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0"
 #" 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))"
 #"))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #")) "
0 6           4 21 2678
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal n"
 #"ormal #f))) #(struct:translate 7.0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 8.0 3.0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"bl"
 #"ack\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(s"
 #"truct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swis"
 #"s normal normal #f))))) #(struct:translate 10.0 0.0 #(struct:transla"
 #"te 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))))) #(struct:translate 13.0 0.0 #(struct:translate 3.5 7.0 #("
 #"struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #("
 #"struct:translate 20.0 0.0 #(struct"
 #":translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 23.0 0.0 #(struct:translate 4."
 #"5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))))) #(struct:translate 32.0 0.0 #(struct:translate 3.5 7.0 #(struc"
 #"t:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 39.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" "
 #"0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 4"
 #"3.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\""
 #" 12 #f swiss normal normal #f))))) #(struct:translate 46.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struc"
 #"t:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pull"
 #"ed-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outlin"
 #"e #(struct:pen \"black\" 2 solid round round)))) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 "
 #"20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")) "
0 6           4 21 2830
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 "
 #"0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0"
 #" 0 20 0 0)) 255 \"red\"))))) #(struct:translate 1 3.0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.5"
 #" 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 "
 #"\"black\" 12 #f swiss normal normal #f))))) #(struct:translate 17.0 "
 #"0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 "
 #"#f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct:"
 #"translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))) #(struct:translate 27.0 0.0 #(struct:translate 1.5"
 #" 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #(struct"
 #":text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0"
 #" 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 46"
 #".0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0 #(stru"
 #"ct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 53.0 0.0 #(struct:translate "
 #"3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 200 0) #(struct:point 200 20) #(struct:point 0 20))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 2"
 #"00 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:pen"
 #" \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 "
 #"0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(st"
 #"ruct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\b\""
0 0 24 3 3 #")) "
0 6           4 21 2830
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 "
 #"0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0"
 #" 0 20 0 0)) 255 \"red\"))))) #(struct:translate 1 3.0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.5"
 #" 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 "
 #"\"black\" 12 #f swiss normal normal #f))))) #(struct:translate 17.0 "
 #"0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 "
 #"#f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct:"
 #"translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))) #(struct:translate 27.0 0.0 #(struct:translate 1.5"
 #" 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #(struct"
 #":text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0"
 #" 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 46"
 #".0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0 #(stru"
 #"ct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 53.0 0.0 #(struct:translate "
 #"3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 200 0) #(struct:point 200 20) #(struct:point 0 20))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 2"
 #"00 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:pen"
 #" \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 "
 #"0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(st"
 #"ruct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 3 #")) "
0 6           4 21 2832
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 "
 #"0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0"
 #" 0 20 0 0)) 255 \"white\"))))) #(struct:translate 1 3.0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3"
 #".5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 17."
 #"0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struc"
 #"t:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 27.0 0.0 #(struct:translate 1"
 #".5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #(stru"
 #"ct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"46.0 0.0 #(struct:translate 2.0 "
 #"7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 50.0 0.0 #(struct:translate 1.5 7.0 #(struct:"
 #"text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 53.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))))) #(struct:translate 0"
 #" 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(stru"
 #"ct:point 200 20) #(struct:point 0 20)) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 solid round round"
 #")))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 "
 #"0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0"
 #" 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\t\""
0 0 24 3 3 #")) "
0 6           4 21 2832
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 "
 #"0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0"
 #" 0 20 0 0)) 255 \"white\"))))) #(struct:translate 1 3.0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3"
 #".5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 17."
 #"0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struc"
 #"t:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 27.0 0.0 #(struct:translate 1"
 #".5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #(stru"
 #"ct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"46.0 0.0 #(struct:translate 2.0 "
 #"7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 50.0 0.0 #(struct:translate 1.5 7.0 #(struct:"
 #"text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 53.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))))) #(struct:translate 0"
 #" 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(stru"
 #"ct:point 200 20) #(struct:point 0 20)) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 solid round round"
 #")))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 "
 #"0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0"
 #" 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 3 #")) "
0 6           4 21 2837
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal n"
 #"ormal #f))) #(struct:translate 7.0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 8.0 3.0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal nor"
 #"mal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(st"
 #"ruct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 17.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #("
 #"struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swi"
 #"ss normal normal #f))))) #(struct:translate 27.0 0.0 #(struct:transl"
 #"ate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #"
 #"(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #"
 #"(struct:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text "
 #"\"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:trans"
 #"late 46.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"b"
 #"lack\" 12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0"
 #" #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:tra"
 #"nslate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point"
 #" 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poin"
 #"t 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(str"
 #"uct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 "
 #"200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\"))))))"
 #")) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")) "
0 6           4 21 2837
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal n"
 #"ormal #f))) #(struct:translate 3.0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 4.0 3.0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal nor"
 #"mal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(st"
 #"ruct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 17.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #("
 #"struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swi"
 #"ss normal normal #f))))) #(struct:translate 27.0 0.0 #(struct:transl"
 #"ate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #"
 #"(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #"
 #"(struct:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text "
 #"\"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:trans"
 #"late 46.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"b"
 #"lack\" 12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0"
 #" #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:tra"
 #"nslate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point"
 #" 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poin"
 #"t 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(str"
 #"uct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 "
 #"200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\"))))))"
 #")) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 38 #"; left arrow key moves the cursor left"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"move-cursor"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 40 #"; right arrow key moves the cursor right"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"move-cursor"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 28 #"; backspace key deletes text"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\b\""
0 0 24 3 3 #") ("
0 0 14 3 3 #"del"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 32 #"; return and tab keys do nothing"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\t\""
0 0 24 3 3 #")) "
0 0 14 3 2 #"ed"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 62
#"; for every other single key press, insert the key, as long as"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 35 #"; the new string fits in the editor"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-txt"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #") "
0 0 14 3 7 #"TEXT_SZ"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT_COLOR"
0 0 24 3 3 #")) "
0 0 14 3 11 #"WORLD_WIDTH"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 67
#"; if something else happens (like multi-key press) just return `ed`"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; f)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#"; `move-cursor` creates a new editor from an editor `ed` and a"
0 0 24 29 1 #"\n"
0 0 17 3 64
#"; string representing a direction `dir` by shifting the position"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; of the cursor in the editor"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; Editor String -> Editor"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")) "
0 6           4 21 2680
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:"
 #"translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5"
 #" 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(struct"
 #":text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0"
 #" 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 27"
 #".0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))))) #(struct:translate 30.0 0.0 #(stru"
 #"ct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 39.0 0.0 #(struct:translate "
 #"3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))) #(struct:translate 46.0 0.0 #(struct:translate 2.0 7.0 #(str"
 #"uct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(str"
 #"uct:translate 50.0 0.0 #(struct:t"
 #"ranslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 53.0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 54.0 3.0 "
 #"#(struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f s"
 #"wiss normal normal #f))))) #(struct:translate 0 0.0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(st"
 #"ruct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:p"
 #"ulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) out"
 #"line #(struct:pen \"black\" 2 solid round round)))) #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-"
 #"point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"whi"
 #"te\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #")) "
0 6           4 21 2836
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3."
 #"5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(struct:t"
 #"ext \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1"
 #" \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 17.0"
 #" 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12"
 #" #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct"
 #":translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 27.0 0.0 #(struct:translate 1."
 #"5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #(struc"
 #"t:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" "
 #"0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 4"
 #"6.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\""
 #" 12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0 #(str"
 #"uct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:translate"
 #" 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 60.0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 61.0 3.0 #(struct"
 #":translate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal"
 #" normal #f))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point "
 #"0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point"
 #" 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(stru"
 #"ct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 2"
 #"00 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))"
 #") #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")) "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate"
 #" 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(st"
 #"ruct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 27.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-"
 #"point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\""
 #"))))) #(struct:translate 28.0 3.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 1.5 7.0 #(struct:te"
 #"xt \" \" 0 1 \"black\" 12 #f swiss normal normal #f))) #(struct:tran"
 #"slate 3.0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"b"
 #"lack\" 12 #f swiss normal normal #f))))) #(struct:translate 12.0 0.0"
 #" #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 19.0 0.0 #(struct:tra"
 #"nslate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))))) #(struct:translate 23.0 0.0 #(struct:translate 1.5 7."
 #"0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))"
 #") #(struct:translate 26.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(struct:"
 #"translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point 20"
 #"0 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct"
 #":pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 solid "
 #"round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 "
 #"20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #")) "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:t"
 #"ranslate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0"
 #" #(struct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f)))))"
 #" #(struct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:tex"
 #"t \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 17.0 0.0 #(struct:translat"
 #"e 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \""
 #" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 30.0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))))) #(struct:translate 39.0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 "
 #"20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))))) #(stru"
 #"ct:translate 40.0 3.0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:t"
 #"ranslate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 11.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 14.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(struc"
 #"t:translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point "
 #"200 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(stru"
 #"ct:pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 soli"
 #"d round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pul"
 #"led-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20."
 #"0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")) "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f sw"
 #"iss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:translat"
 #"e 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(s"
 #"truct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 17.0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #("
 #"struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0"
 #")) 255 \"red\"))))) #(struct:translate 18.0 3.0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))) #(struct:translate 3.0 0.0 #(struct:translate 3.5 7.0 #"
 #"(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #"
 #"(struct:translate 10.0 0.0 #(struct:translate 1.5 7.0 #(struct:text "
 #"\" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:trans"
 #"late 13.0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"b"
 #"lack\" 12 #f swiss normal normal #f))))) #(struct:translate 22.0 0.0"
 #" #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 29.0 0.0 #(struct:tra"
 #"nslate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))))) #(struct:translate 33.0 0.0 #(struct:translate 1.5 7."
 #"0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))"
 #") #(struct:translate 36.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(struct:"
 #"translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point 20"
 #"0 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct"
 #":pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 solid "
 #"round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 "
 #"20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #")) "
0 6           4 21 2679
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate"
 #" 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(st"
 #"ruct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 27.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-"
 #"point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\""
 #"))))) #(struct:translate 28.0 3.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 1.5 7.0 #(struct:te"
 #"xt \" \" 0 1 \"black\" 12 #f swiss normal normal #f))) #(struct:tran"
 #"slate 3.0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"b"
 #"lack\" 12 #f swiss normal normal #f))))) #(struct:translate 12.0 0.0"
 #" #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 19.0 0.0 #(struct:tra"
 #"nslate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))))) #(struct:translate 23.0 0.0 #(struct:translate 1.5 7."
 #"0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))"
 #") #(struct:translate 26.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(struct:"
 #"translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point 20"
 #"0 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct"
 #":pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 solid "
 #"round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 "
 #"20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")) "
0 6           4 21 2830
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 "
 #"0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0"
 #" 0 20 0 0)) 255 \"red\"))))) #(struct:translate 1 3.0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.5"
 #" 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 "
 #"\"black\" 12 #f swiss normal normal #f))))) #(struct:translate 17.0 "
 #"0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 "
 #"#f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct:"
 #"translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))) #(struct:translate 27.0 0.0 #(struct:translate 1.5"
 #" 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #(struct"
 #":text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0"
 #" 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 46"
 #".0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0 #(stru"
 #"ct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 53.0 0.0 #(struct:translate "
 #"3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 200 0) #(struct:point 200 20) #(struct:point 0 20))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 2"
 #"00 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:pen"
 #" \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 "
 #"0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(st"
 #"ruct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-cursor"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #")) "
0 6           4 21 2678
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal n"
 #"ormal #f))) #(struct:translate 7.0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 8.0 3.0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"bl"
 #"ack\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(s"
 #"truct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swis"
 #"s normal normal #f))))) #(struct:translate 10.0 0.0 #(struct:transla"
 #"te 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))))) #(struct:translate 13.0 0.0 #(struct:translate 3.5 7.0 #("
 #"struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #("
 #"struct:translate 20.0 0.0 #(struct"
 #":translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 23.0 0.0 #(struct:translate 4."
 #"5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f"
 #"))))) #(struct:translate 32.0 0.0 #(struct:translate 3.5 7.0 #(struc"
 #"t:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 39.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" "
 #"0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 4"
 #"3.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\""
 #" 12 #f swiss normal normal #f))))) #(struct:translate 46.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struc"
 #"t:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pull"
 #"ed-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outlin"
 #"e #(struct:pen \"black\" 2 solid round round)))) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 "
 #"20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-cursor"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 3 #"txt"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-txt"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 9 #"cursorPos"
0 0 24 3 2 #" ("
0 0 14 3 16 #"editor-cursorPos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 77
(
 #"; if `dir` is \"left\", and cursorPos is not at beginning, move the "
 #"cursor left"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 73
(
 #"; if `dir` is \"right\", and cursorPos is not at end, move the curso"
 #"r right"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 23 #"; else return same `ed`"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 9 #"CURSOR_ON"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 9 #"CURSOR_ON"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 9 #"CURSOR_ON"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; \"insert\" creates a new editor from an editor `ed` and key event "
 #"`ke`"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
#"; by inserting the key event immediately after the editor's cursor"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; Editor Key Event -> Editor"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 3 #")) "
0 6           4 21 2995
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0"
 #".0 #(struct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #"
 #"f swiss normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:t"
 #"ranslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30."
 #"0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 39.0 0.0 #(struc"
 #"t:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 46.0 0.0 #(struct:translate 2"
 #".0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 50.0 0.0 #(struct:translate 1.5 7.0 #(stru"
 #"ct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 53.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"60.0 0.0 #(struct:translate 3.5 "
 #"7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 67.0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 "
 #"0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0"
 #" 20 0 0)) 255 \"red\"))))) #(struct:translate 68.0 3.0 #(struct:tran"
 #"slate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point 0 20)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 "
 #"200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:pe"
 #"n \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20"
 #" 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(s"
 #"truct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")) "
0 6           4 21 2995
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0"
 #".0 #(struct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #"
 #"f swiss normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:t"
 #"ranslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30."
 #"0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 39.0 0.0 #(struc"
 #"t:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 46.0 0.0 #(struct:translate 2"
 #".0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 50.0 0.0 #(struct:translate 1.5 7.0 #(stru"
 #"ct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 53.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"60.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 63.0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 "
 #"0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0"
 #" 20 0 0)) 255 \"red\"))))) #(struct:translate 64.0 3.0 #(struct:tran"
 #"slate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point 0 20)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 "
 #"200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:pe"
 #"n \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20"
 #" 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(s"
 #"truct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 3 #")) "
0 6           4 21 2838
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:t"
 #"ranslate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0"
 #" #(struct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f)))))"
 #" #(struct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:tex"
 #"t \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 17.0 0.0 #(struct:translat"
 #"e 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \""
 #" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 30.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))))) #(struct:translate 37.0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 "
 #"20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))))) #(stru"
 #"ct:translate 38.0 3.0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 4.5"
 #" 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")) #(struct:translate 9.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 16.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 "
 #"\"black\" 12 #f swiss normal normal #f))))) #(struct:translate 20.0 "
 #"0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 "
 #"#f swiss normal normal #f))))) #(struct:translate 23.0 0.0 #(struct:"
 #"translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:po"
 #"int 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-p"
 #"oint 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #("
 #"struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0"
 #" 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))"
 #"))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")) "
0 6           4 21 2838
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:t"
 #"ranslate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0"
 #" #(struct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f)))))"
 #" #(struct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:tex"
 #"t \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 17.0 0.0 #(struct:translat"
 #"e 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \""
 #" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 30.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"bla"
 #"ck\" 12 #f swiss normal normal #f))))) #(struct:translate 33.0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 "
 #"20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))))) #(stru"
 #"ct:translate 34.0 3.0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 4.5"
 #" 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")) #(struct:translate 9.0 0.0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 16.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 "
 #"\"black\" 12 #f swiss normal normal #f))))) #(struct:translate 20.0 "
 #"0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 "
 #"#f swiss normal normal #f))))) #(struct:translate 23.0 0.0 #(struct:"
 #"translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:po"
 #"int 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-p"
 #"oint 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #("
 #"struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0"
 #" 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))"
 #"))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 3 #")) "
0 6           4 21 2838
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate"
 #" 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(st"
 #"ruct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 27.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-"
 #"point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\""
 #"))))) #(struct:translate 28.0 3.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f"
 #" swiss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:trans"
 #"late 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 10.0 0.0 #(struct:translate 4.5 7.0 "
 #"#(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) "
 #"#(struct:translate 19.0 0.0 #(struct:translate 3.5 7.0 #(struct:text"
 #" \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 26.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \""
 #"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30.0 0."
 #"0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f"
 #" swiss normal normal #f))))) #(struct:translate 33.0 0.0 #(struct:tr"
 #"anslate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal"
 #" normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:poin"
 #"t 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0"
 #" 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))"
 #"))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")) "
0 6           4 21 2838
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate"
 #" 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(st"
 #"ruct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 20.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" "
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 23.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-"
 #"point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\""
 #"))))) #(struct:translate 24.0 3.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f"
 #" swiss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:trans"
 #"late 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 10.0 0.0 #(struct:translate 4.5 7.0 "
 #"#(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) "
 #"#(struct:translate 19.0 0.0 #(struct:translate 3.5 7.0 #(struct:text"
 #" \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 26.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \""
 #"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30.0 0."
 #"0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f"
 #" swiss normal normal #f))))) #(struct:translate 33.0 0.0 #(struct:tr"
 #"anslate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal"
 #" normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:poin"
 #"t 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0"
 #" 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))"
 #"))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 3 #")) "
0 6           4 21 2837
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal n"
 #"ormal #f))) #(struct:translate 7.0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 8.0 3.0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal nor"
 #"mal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(st"
 #"ruct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 17.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #("
 #"struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swi"
 #"ss normal normal #f))))) #(struct:translate 27.0 0.0 #(struct:transl"
 #"ate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #"
 #"(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #"
 #"(struct:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text "
 #"\"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:trans"
 #"late 46.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"b"
 #"lack\" 12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0"
 #" #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:tra"
 #"nslate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point"
 #" 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poin"
 #"t 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(str"
 #"uct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 "
 #"200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\"))))))"
 #")) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")) "
0 6           4 21 2837
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal n"
 #"ormal #f))) #(struct:translate 3.0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 4.0 3.0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal nor"
 #"mal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(st"
 #"ruct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 17.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #("
 #"struct:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swi"
 #"ss normal normal #f))))) #(struct:translate 27.0 0.0 #(struct:transl"
 #"ate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 30.0 0.0 #(struct:translate 4.5 7.0 #"
 #"(struct:text \"w\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #"
 #"(struct:translate 39.0 0.0 #(struct:translate 3.5 7.0 #(struct:text "
 #"\"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:trans"
 #"late 46.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"b"
 #"lack\" 12 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0"
 #" #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:tra"
 #"nslate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss normal "
 #"normal #f))))))) #(struct:translate 0 0.0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struct:point"
 #" 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poin"
 #"t 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outline #(str"
 #"uct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 "
 #"200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"white\"))))))"
 #")) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 3 #"txt"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-txt"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 9 #"cursorPos"
0 0 24 3 2 #" ("
0 0 14 3 16 #"editor-cursorPos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 61
#"; append pre cursor text to inserted text to post cursor text"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 6 #"newTxt"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 2 #") "
0 0 14 3 2 #"ke"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 14 3 6 #"newTxt"
0 0 24 3 1 #" "
0 0 14 3 9 #"CURSOR_ON"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#"; \"del\" creates a new editor from an editor `ed` by deleting the"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; 1String immediately preceding the editor's cursor"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Editor -> Editor"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 3 #"del"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 3 #")) "
0 6           4 21 2677
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:"
 #"translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss norm"
 #"al normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5"
 #" 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(struct"
 #":text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o\" 0"
 #" 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 27"
 #".0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))))) #(struct:translate 30.0 0.0 #(stru"
 #"ct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 39.0 0.0 #(struct:translate "
 #"3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))) #(struct:translate 46.0 0.0 #(struct:translate 2.0 7.0 #(str"
 #"uct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(str"
 #"uct:translate 50.0 0.0 #(struct:t"
 #"ranslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 53.0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 54.0 3.0 "
 #"#(struct:translate 0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swis"
 #"s normal normal #f))))) #(struct:translate 0 0.0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 200 0) #(struct:point 200 20) #(struc"
 #"t:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pull"
 #"ed-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) outlin"
 #"e #(struct:pen \"black\" 2 solid round round)))) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 200 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 "
 #"20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 3 #"del"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed1"
0 0 24 3 3 #")) "
0 6           4 21 2520
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"blac"
 #"k\" 12 #f swiss normal normal #f))) #(struct:translate 7.0 0.0 #(str"
 #"uct:translate 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate"
 #" 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 7.0 #(st"
 #"ruct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"o"
 #"\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translat"
 #"e 27.0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #(struct:pulled-"
 #"point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\""
 #"))))) #(struct:translate 28.0 3.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))) #(struct:translate 9.0 0.0 #(struct:translate 3.5 7.0"
 #" #(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f)))))"
 #" #(struct:translate 16.0 0.0 #(struct:translate 2.0 7.0 #(struct:tex"
 #"t \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 20.0 0.0 #(struct:translat"
 #"e 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 23.0 0.0 #(struct:translate 3.5 7.0 #(s"
 #"truct:text \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #"
 #"(struct:translate 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 200 0) #(struct:point 200 20) #(struct:point 0 20)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) "
 #"#(struct:pulled-point 0 0 0 20 0 0)) outline #(struct:pen \"black\" "
 #"2 solid round round)))) #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(stru"
 #"ct:pulled-point 0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200"
 #".0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 3 #"del"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed2"
0 0 24 3 3 #")) "
0 6           4 21 2520
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f sw"
 #"iss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:translat"
 #"e 3.5 7.0 #(struct:text \"e\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 14.0 0.0 #(struct:translate 1.5 7.0 #(s"
 #"truct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 17.0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1 0 0 0) #("
 #"struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point 0 0 0 20 0 0"
 #")) 255 \"red\"))))) #(struct:translate 18.0 3.0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translat"
 #"e 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal norma"
 #"l #f))) #(struct:translate 7.0 0.0 #(struct:translate 1.5 7.0 #(stru"
 #"ct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 10.0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"19.0 0.0 #(struct:translate 3.5 "
 #"7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 26.0 0.0 #(struct:translate 2.0 7.0 #(struct:"
 #"text \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 30.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \"l\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 33."
 #"0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))))) #(struct:translate 0 0.0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 "
 #"20) #(struct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #("
 #"struct:pulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0"
 #" 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struct"
 #":translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct"
 #":pulled-point 0 0 200 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 2"
 #"55 \"white\")))))))) #(struct:bb 200.0 20.0 20.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 3 #"del"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed3"
0 0 24 3 3 #")) "
0 6           4 21 2836
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 3.0 #(struct:tran"
 #"slate 0.0 7.0 #(struct:text \"\" 0 1 \"black\" 12 #f swiss normal no"
 #"rmal #f))) #(struct:translate 0.0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 1 0 0 0) #(struct:pulled-point 0 0 1 20 0 0) #(struct:pulled-point"
 #" 0 0 0 20 0 0)) 255 \"red\"))))) #(struct:translate 1.0 3.0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 3.5 7.0 #(struct:text \"h\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 7.0 #(str"
 #"uct:text \"e\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(str"
 #"uct:translate 14.0 0.0 #(struct:t"
 #"ranslate 1.5 7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 17.0 0.0 #(struct:translate 1.5 "
 #"7.0 #(struct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 20.0 0.0 #(struct:translate 3.5 7.0 #(struct:"
 #"text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 27.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 30."
 #"0 0.0 #(struct:translate 4.5 7.0 #(struct:text \"w\" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 39.0 0.0 #(struc"
 #"t:translate 3.5 7.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 46.0 0.0 #(struct:translate 2"
 #".0 7.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 50.0 0.0 #(struct:translate 1.5 7.0 #(stru"
 #"ct:text \"l\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 53.0 0.0 #(struct:translate 3.5 7.0 #(struct:text \"d\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))))) #(struct:translat"
 #"e 0 0.0 #(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(s"
 #"truct:point 200 20) #(struct:point 0 20)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 200 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulled-"
 #"point 0 0 0 20 0 0)) outline #(struct:pen \"black\" 2 solid round ro"
 #"und)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200"
 #" 0 0 0) #(struct:pulled-point 0 0 200 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"white\")))))))) #(struct:bb 200.0 20.0 20.0) #f"
 #")"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"del"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 65
#"; if we are able to delete (if we are not at beginning of editor)"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 16 #"editor-cursorPos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 3 #"txt"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-txt"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 9 #"cursorPos"
0 0 24 3 2 #" ("
0 0 14 3 16 #"editor-cursorPos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 46 #"; append pre cursor text-1 to post cursor text"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 6 #"newTxt"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 14 3 6 #"newTxt"
0 0 24 3 1 #" "
0 0 14 3 9 #"CURSOR_ON"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 9 #"cursorPos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 55 #"; else (if we are at beginning of editor) return editor"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"make-editor"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-txt"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #") "
0 0 14 3 9 #"CURSOR_ON"
0 0 24 3 2 #" ("
0 0 14 3 16 #"editor-cursorPos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; 4)"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Editor -> Editor"
0 0 24 29 1 #"\n"
0 0 17 3 64
#"; launches the text editor program given an initial editor state"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 12 #"flash-cursor"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 6 #"render"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 4 #"edit"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; launch editor:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 3 #"ed0"
0 0 24 3 1 #")"
0           0
